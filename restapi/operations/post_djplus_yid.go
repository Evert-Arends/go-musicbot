package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostDjplusYidHandlerFunc turns a function with the right signature into a post djplus yid handler
type PostDjplusYidHandlerFunc func(PostDjplusYidParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostDjplusYidHandlerFunc) Handle(params PostDjplusYidParams) middleware.Responder {
	return fn(params)
}

// PostDjplusYidHandler interface for that can handle valid post djplus yid params
type PostDjplusYidHandler interface {
	Handle(PostDjplusYidParams) middleware.Responder
}

// NewPostDjplusYid creates a new http.Handler for the post djplus yid operation
func NewPostDjplusYid(ctx *middleware.Context, handler PostDjplusYidHandler) *PostDjplusYid {
	return &PostDjplusYid{Context: ctx, Handler: handler}
}

/*PostDjplusYid swagger:route POST /djplus/{yid} postDjplusYid

Youtube ripping endpoint

This endpoint allows you to add a youtube link to the download queue

*/
type PostDjplusYid struct {
	Context *middleware.Context
	Handler PostDjplusYidHandler
}

func (o *PostDjplusYid) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostDjplusYidParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
